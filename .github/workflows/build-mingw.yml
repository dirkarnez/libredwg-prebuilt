name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: windows-2019
    env:
      libraryName: libredwg
      cmakeInstallationPath: libredwg-installation
      tagName: 0.12.5 #target tag
      mingwTargetZip: libredwg-${{ github.ref_name }}-x86_64-posix-seh-rev0-8.1.0.zip
    steps:
      - name: check mingw version
        run: gcc --version
        
      - name: git clone
        shell: cmd
        run: git clone --recursive https://github.com/LibreDWG/libredwg.git && cd libredwg && git checkout ${{ env.tagName }}
      
      - name: aria2c
        shell: cmd
        run:  aria2c https://udomain.dl.sourceforge.net/project/mingw-w64/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/8.1.0/threads-posix/seh/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z && 7z.exe x x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
        
      - name: cmake generate, build and install
        shell: cmd
        run: |
            set PATH=^
            ${{github.workspace}\mingw64;^
            ${{github.workspace}\mingw64\bin;^
            cd libredwg && cmake.exe -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DLIBREDWG_LIBONLY=ON -DCMAKE_INSTALL_PREFIX="build/${{ env.cmakeInstallationPath }}" -B./build &&^
            cd build && cmake --build . && cmake --install . 
        
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "libredwg/build/${{ env.cmakeInstallationPath }}"
          filename: "${{ env.mingwTargetZip }}"
        
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "libredwg/build/${{ env.cmakeInstallationPath }}/${{ env.mingwTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
